@use '@angular/material' as mat;

:host {
  display: block;
  padding: clamp(5px, 1vw, 10px); // Responsive padding
}

.department-tree-container {
 // max-width: 1100px;
  margin: 0 auto;
}

.tree-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.filter-field {
  min-width: 40%;
  max-width: 600px; // Or adjust as needed
}

.loading-text {
  text-align: center;
  padding: 1rem;
  color: var(--mat-gray-600, #757575);
  font-style: italic;
}

.error-message, .empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 2rem 1rem;
  border: 1px dashed var(--mat-divider-color, rgba(0, 0, 0, 0.12));
  border-radius: 8px; // Softer corners
  margin-top: 1.5rem;
  background-color: var(--mat-toolbar-standard-background-color, #f5f5f5); // Theme background

  mat-icon {
    font-size: 3rem;
    width: 3rem;
    height: 3rem;
    margin-bottom: 1rem;
  }
   .empty-icon {
      color: var(--mat-gray-500, #9e9e9e);
   }

  span {
    margin-bottom: 1rem;
    max-width: 90%;
    line-height: 1.5;
  }
}

.department-mat-tree {
  .mat-tree-node, .mat-nested-tree-node {
    display: flex;
    align-items: center;
    // Use logical properties for padding (better for RTL)
    padding-block: 0.5rem;
    min-height: 48px; // Material standard height
    border-bottom: 1px solid var(--mat-divider-color, rgba(0, 0, 0, 0.12));
    box-sizing: border-box; // Include padding/border in element's total width/height

    &:last-child {
        border-bottom: none;
    }

    // Use theme variable for hover state layer
    &:hover {
      // background-color: mat.get-theme-hover-color(mat.get-theme-background-palette(mat.$light-theme, background)); // Adjust theme if needed
        .node-actions {
            opacity: 1; // Show actions clearly on hover
        }
    }
  }

   // Container for name and serial to control spacing
   .node-content {
       display: flex;
       align-items: baseline; // Align name and serial nicely
       flex-grow: 1;
       margin-inline-start: 8px; // Space after icon/toggle
       margin-inline-end: 8px; // Space before actions
       overflow: hidden; // Prevent long names breaking layout
   }

  .node-name {
    font-weight: 500;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-inline-end: 0.5rem; // Space between name and serial
  }

  .node-serial {
    font-size: 0.8em;
    color: var(--mat-gray-600, #757575);
    white-space: nowrap; // Prevent wrapping
  }

  .node-actions {
    display: flex;
    align-items: center;
    flex-shrink: 0; // Prevent actions from shrinking
    opacity: 0.2; // Hide actions until hover
    transition: opacity 0.15s ease-in-out;

    // Actions appear on hover/focus-within for accessibility
    *:hover > &,
    *:focus-within > &, // Show on keyboard focus too
    .cdk-keyboard-focused & { // Material's keyboard focus class
        opacity: 1;
    }

    // Use logical margin for RTL compatibility
    margin-inline-start: auto; // Pushes actions to the end
  }

   // Smaller action buttons for tree view
   .node-actions button.mat-mdc-icon-button {
      width: 36px; // Adjust size as needed
      height: 36px;
      line-height: 36px;
       .mat-icon {
         font-size: 20px;
         width: 20px;
         height: 20px;
      }
   }
}

// --- Responsive Adjustments ---
@media (max-width: 768px) {
    .filter-field {
      min-width: 100%;
    }
    .department-mat-tree {
        .node-serial {
            display: none; // Hide less critical info on smaller screens
        }
    }
}

@media (max-width: 600px) {
  .filter-field {
    min-width: 100%;
  }
  .department-mat-tree {
      .node-actions {
          opacity: 1; // Always show actions on likely touch devices
      }
  }
}