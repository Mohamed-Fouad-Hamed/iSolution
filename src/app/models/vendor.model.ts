// Represents the structure of the Page object from Spring Boot Pageable
export interface Page<T> {
  content: T[];
  pageable: {
    sort: {
      sorted: boolean;
      unsorted: boolean;
      empty: boolean;
    };
    offset: number;
    pageNumber: number;
    pageSize: number;
    paged: boolean;
    unpaged: boolean;
  };
  last: boolean;
  totalPages: number;
  totalElements: number;
  size: number;
  number: number; // Current page number (0-indexed)
  sort: {
    sorted: boolean;
    unsorted: boolean;
    empty: boolean;
  };
  first: boolean;
  numberOfElements: number;
  empty: boolean;
}

// Matches backend VendorDto
export interface VendorDto {
  id: number;
  vendorCode: string; // Generated by backend
  name: string;
  email: string;
  phone?: string; // Optional
  address?: string; // Optional
  isActive? : boolean;
  accountId: number;
}

export interface VendorUpdateDto {
  name: string;
  email: string;
  phone?: string;
  address?: string;
  isActive?: boolean; // <--- ENSURE THIS IS PRESENT (if it can be updated)
}

// VendorCreateDto might also have isActive if it's set during creation
export interface VendorCreateDto {
  name: string;
  email: string;
  phone?: string;
  address?: string;
  accountId: number;
  isActive?: boolean; // <--- Add if settable on creation
}

// Interface for filter parameters
export interface VendorFilterParams {
    name?: string | null;
    email?: string | null;
    vendorCode?: string | null;
    isActive?: boolean | null;
    // Add other filterable fields if needed
}