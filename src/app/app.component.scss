
:host {
  display: block; // Good practice for root component
  height: 100vh;  // Make app-root take full viewport height
  overflow: hidden; // Prevent app-root itself from scrolling
}

.container {
  display: flex;
  flex-direction: column;
  height: 100%; /* Inherit height from :host (full viewport height) */
  // overflow: hidden; // Moved to :host
}

.header {
  flex-shrink: 0; /* Don't shrink, fixed height (e.g., 56px or 64px) */
  // background-color: #your-header-color; // Example
  // color: white; // Example
  z-index: 2; // Ensure header is above sidenav content if they overlap due to fixedInViewport
}

.sidenav-container {
  flex-grow: 1; /* Sidenav container takes all remaining vertical space */
  // overflow: auto; // REMOVE this - we want mat-sidenav-content to manage its scroll, not the whole container
  // padding: 5px; // Consider removing or applying to .sidenav-content if needed
}

.sidenav {
  width: 240px;
  // border-right: none;
  // box-shadow: 2px 0 5px rgba(0,0,0,0.1); // Example shadow
  // Sidenav content might scroll independently if its list is very long.
  // The fixedInViewport and fixedTopGap handle its positioning relative to the header.
}

// Styles for the content area within the sidenav
.sidenav-content {
  display: flex; /* Enable flexbox for its children */
  flex-direction: column; /* Stack children vertically (e.g., a top bar inside content, then main) */
  overflow: hidden; /* Prevent .sidenav-content itself from scrolling; its child .content-wrapper will */
  // padding: 16px; // Apply padding here if you want consistent padding around router-outlet content
                    // Or apply it within specific routed components for more control.
}

.content-wrapper {
  flex-grow: 1; /* This is CRITICAL: main content area takes all available space in .sidenav-content */
  display: flex; /* Enable flexbox for router-outlet's rendered component */
  flex-direction: column; /* Child component will stack its content vertically */
  overflow: hidden; /* Prevent .content-wrapper from scrolling; router-outlet's child will */
  // padding: 15px; // Add padding here if you want it around all routed components
                    // OR, add padding directly in your CustomerListComponent's .customer-list-page
}

.spacer {
  flex: 1 1 auto;
}



  // --- USER PROFILE SECTION STYLES ---
  .user-profile-section {
    display: flex;
    align-items: center;
    padding: 16px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
   // background-color: rgba(26, 25, 25, 0.06);; // Subtle background

    &:hover {
      background-color: rgba(0, 0, 0, 0.06); // Subtle hover
    }

    .user-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      object-fit: cover; // Ensure image covers the area nicely
      margin-right: 16px;
      background-color: rgba(0, 0, 0, 0.1); // Placeholder bg color
      border: 1px solid rgba(0,0,0,0.1);
    }

    .default-avatar { // Style if using mat-icon fallback
        font-size: 40px;
        width: 40px;
        height: 40px;
       // color: mat.get-color-from-palette($foreground, 'secondary-text');
    }

    .user-name {
      padding-inline-start: 10px;
      font-weight: 500;
     // color: mat.get-color-from-palette($foreground, 'default-contrast');
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis; // Prevent long names from breaking layout
    }
  }



// Loading Overlay (keep existing)
.loading-overlay {
  position: fixed;
  margin: 10px;
  padding: 10px;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000; // Ensure it's above other content
}

// --- Responsive Adjustments ---
@media (max-width: 599.98px) { // Handset breakpoint
  .sidenav-container {
    height: calc(100vh - 56px);
  }
}


